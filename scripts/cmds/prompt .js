const axios = require('axios'); // Importe la biblioth√®que axios pour effectuer des requ√™tes HTTP.

module.exports = {
  config: {
    name: "prompt", // Nom de la commande : "prompt"
    aliases: ['p'], // Alias de la commande : "p" (raccourci)
    version: "1.0", // Version de la commande
    author: "Christus", // Auteur de la commande
    countDown: 5, // D√©lai d'attente avant de pouvoir utiliser la commande √† nouveau (en secondes)
    role: 0, // Niveau de r√¥le requis pour utiliser la commande (0 = tous les utilisateurs)
    shortDescription: "G√©n√®re une invite d'IA", // Description courte de la commande
    longDescription: "G√©n√®re une invite Midjourney bas√©e sur du texte ou une image.", // Description longue de la commande
    category: "ùóîùóú", // Cat√©gorie de la commande (Intelligence Artificielle)
    guide: { // Guide d'utilisation de la commande
      en: " {pn} <texte>: G√©n√®re une invite bas√©e sur le texte."
          + "\n {pn} (r√©pondre √† une image): G√©n√®re une invite bas√©e sur l'image √† laquelle vous r√©pondez."
    }
  },

  onStart: async function({ message, event, args }) { // Fonction ex√©cut√©e lorsque la commande est appel√©e
    try {
      let imageUrl; // D√©claration d'une variable pour stocker l'URL de l'image

      // V√©rifie si la commande est une r√©ponse √† un message et si l'attachement est une photo
      if (event.type === "message_reply" && event.messageReply.attachments[0]?.type === 'photo') {
        imageUrl = event.messageReply.attachments[0].url; // R√©cup√®re l'URL de l'image r√©pondue
      } else { // Si ce n'est pas une r√©ponse √† une image :
        const promptText = args.join(" "); // R√©cup√®re le texte de l'invite (les arguments de la commande)
        if (!promptText) { // V√©rifie si aucun texte n'a √©t√© fourni
          return message.reply("Veuillez fournir une invite ou r√©pondre √† une image."); // Renvoie un message d'erreur si aucun texte n'est donn√©
        }

        // Envoie une requ√™te GET √† l'API pour g√©n√©rer une invite √† partir du texte
        const response = await axios.get(`https://nova-apis.onrender.com/prompt?prompt=${encodeURIComponent(promptText)}`);
        if (response.status === 200) { // Si la requ√™te a r√©ussi (code 200)
          return message.reply(response.data.prompt); // Envoie l'invite g√©n√©r√©e en r√©ponse au message
        }
      }

      // Si imageUrl est d√©finie (si on r√©pond √† une image)
      if (imageUrl) {
        // Envoie une requ√™te GET √† l'API pour g√©n√©rer une invite √† partir de l'image
        const response = await axios.get(`https://nova-apis.onrender.com/prompt?image=${encodeURIComponent(imageUrl)}`);
        if (response.status === 200) { // Si la requ√™te a r√©ussi
          return message.reply(response.data.prompt); // Envoie l'invite g√©n√©r√©e en r√©ponse au message
        }
      } else { // Si ni texte, ni image
        return message.reply("Entr√©e invalide. Veuillez fournir une invite ou r√©pondre √† une image."); // Message d'erreur
      }
    } catch (error) {
      console.error("Erreur lors de la g√©n√©ration de l'invite:", error); // Affiche l'erreur dans la console
      message.reply("Une erreur s'est produite. Veuillez r√©essayer plus tard."); // Envoie un message d'erreur √† l'utilisateur
    }
  }
};